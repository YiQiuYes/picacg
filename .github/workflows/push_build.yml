name: PushBuild

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  FLUTTER_VERSION: '3.29.3'
  APP_NAME: 'picacg'

jobs:
  apk:
    name: Build APK
    runs-on: ubuntu-latest
    env:
      version: "pushAction"
      ALIAS: ${{ secrets.ALIAS }}
      KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
      KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
      SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Modify version
        run: |
          sed -i "s/version: .*/version: 1.0.0+1/" pubspec.yaml

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'oracle'

      - name: Set up sign
        run: echo $SIGNING_KEY | base64 -d > android/app/key.jks

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: stable
        
      - name: Run Flutter Pub Get
        run: flutter pub get

      - name: Generate Flutter Code
        run: |
          cargo install flutter_rust_bridge_codegen
          flutter_rust_bridge_codegen generate

      - name: Build APK
        run: |
          flutter build apk --release
          flutter build apk --release --split-per-abi

      - name: Rename APK
        run: |
          mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/${{ env.APP_NAME }}-android-${{ env.version }}.apk
          mv build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk build/app/outputs/flutter-apk/${{ env.APP_NAME }}-android-armeabi-v7a-${{ env.version }}.apk
          mv build/app/outputs/flutter-apk/app-arm64-v8a-release.apk build/app/outputs/flutter-apk/${{ env.APP_NAME }}-android-arm64-v8a-${{ env.version }}.apk
          mv build/app/outputs/flutter-apk/app-x86_64-release.apk build/app/outputs/flutter-apk/${{ env.APP_NAME }}-android-x86_64-${{ env.version }}.apk

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: android
          path: build/app/outputs/flutter-apk/${{ env.APP_NAME }}-android-*.apk

  ipa:
    name: Build IPA
    runs-on: macos-latest
    env:
      version: "pushAction"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Modify version
        run: |
          sed -i "" "s/version: .*/version: 1.0.0+1/" pubspec.yaml

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: stable

      - name: Run Flutter Pub Get
        run: flutter pub get

      - name: Generate Flutter Code
        run: |
          cargo install flutter_rust_bridge_codegen
          flutter_rust_bridge_codegen generate

      - name: Build IPA
        run: |
          flutter build ipa --release --no-codesign
          cd build/ios/archive/Runner.xcarchive/Products/Applications
          mkdir -p Payload
          mv Runner.app Payload
          zip -9 release-ios.ipa -r Payload

      - name: Rename IPA
        run: |
          mv build/ios/archive/Runner.xcarchive/Products/Applications/release-ios.ipa build/ios/archive/Runner.xcarchive/Products/Applications/${{ env.APP_NAME }}-ios-${{ env.version }}.ipa

      - name: Upload IPA
        uses: actions/upload-artifact@v4
        with:
          name: ios
          path: build/ios/archive/Runner.xcarchive/Products/Applications/${{ env.APP_NAME }}-ios-*.ipa
